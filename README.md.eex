# lab42_message

<%= xtra.do_not_edit_warning template: template %>

[![Build Status](https://travis-ci.org/RobertDober/lab42_message.svg?branch=master)](https://travis-ci.org/RobertDober/lab42_message)
[![Coverage Status](https://coveralls.io/repos/github/RobertDober/lab42_message/badge.svg?branch=master)](https://coveralls.io/github/RobertDober/lab42_message?branch=master)
[![Hex.pm](https://img.shields.io/hexpm/v/lab42_message.svg)](https://hex.pm/packages/lab42_message)
[![Hex.pm](https://img.shields.io/hexpm/dw/lab42_message.svg)](https://hex.pm/packages/lab42_message)
[![Hex.pm](https://img.shields.io/hexpm/dt/lab42_message.svg)](https://hex.pm/packages/lab42_message)


## Synopsis

Simple Library to manage Errors and Results.

Its Simplicity is inspired by
 Dave Thomas' keynote, condensed here https://pragdave.me/blog/2018/06/02/project-structure.html

## API

<%= xtra.moduledoc("Lab42.Message") %>

<%= 
   fns = ~w{debug info warning error critical fatal}a
   |> Enum.flat_map(&["add_#{&1}/3", "make_#{&1}/2"])
   |> Enum.sort
   # In Extratcly 0.1.5, use the following:
   # xtra.functiondoc(:all, module: "Lab42.Message", headline: 3)
   xtra.functiondoc(fns, module: "Lab42.Message", headline: 3) %>

<%= xtra.functiondoc("Lab42.Message.extract/1", headline: 3) %>
<%= xtra.functiondoc("Lab42.Message.max_severity/2", headline: 3) %>
<%= xtra.functiondoc("Lab42.Message.messages/2", headline: 3) %>
<%= xtra.functiondoc("Lab42.Message.result/3", headline: 3) %>
<%= xtra.functiondoc("Lab42.Message.severity_value/2", headline: 3) %>


## Author

Copyright Â© 2019 Robert Dober, mailto:robert.dober@gmail.com

## License

[Apache-2.0](LICENSE)
<!-- SPDX-License-Identifier: Apache-2.0 -->
